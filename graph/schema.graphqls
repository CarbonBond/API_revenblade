# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Character {
  id: ID!
  name: String!
  complexity: Complexity! 
  attack_type: AttackType!
  role: Role!
  health: [Float!]!
  power: [Float!]!
  movement_speed: Float!
  lore: String
  passive: Ability!
  primary: Ability!
  secondary: Ability!
  mobility: Ability!
  heavy: Ability!
  defensive: Ability!
}

enum Complexity {
  EASY,
  INTERMEDIATE,
  HARD
}

enum AttackType {
  MELEE,
  RANGED,
  HYBRID
}

enum Role {
  CARRY,
  TANK,
  SUPPORT,
  MAGE
}

type Ability {
  id: ID!
  name: String!
  description: String!
  data: String!
}

type Query {
  characterName(name: String!): Character!
  character(_id: String!): Character!
  characters: [Character!]!
}

input NewAbility {
  name: String!
  description: String!
  data: String!
}

input NewCharacter {
  name: String!
  complexity: Complexity! 
  attack_type: AttackType!
  role: Role!
  health: [Float!]!
  power: [Float!]!
  movement_speed: Float!
  lore: String
  passive: NewAbility!
  primary: NewAbility!
  secondary: NewAbility!
  mobility: NewAbility!
  heavy: NewAbility!
  defensive: NewAbility!
}

type Mutation {
  createCharacter(input: NewCharacter!): Character!
}
